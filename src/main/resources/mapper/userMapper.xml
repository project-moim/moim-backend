<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="avocado.moim.user.repository.IUserMapper">
    <select id="findByEmail" resultType="avocado.moim.user.entity.User" parameterType="string">
        select u.user_id as userId,
               u.name,
               u.email,
               u.password,
               u.role,
               u.status  as status
        from user u
        where u.email = #{email}
    </select>

    <!-- 로그인 정보 저장 또는 업데이트 -->
    <insert id="saveLoginInfo" parameterType="avocado.moim.user.entity.CurrentLogin">
        insert into current_login (email, remote_addr, last_login_time, last_refresh_time, expiration_time_limit,
                                   refresh_token)
        values (#{email}, #{remoteAddr}, NOW(), NOW(), #{expirationTimeLimit}, #{refreshToken}) on duplicate key
        update remote_addr = #{remoteAddr}, last_login_time = NOW(), last_refresh_time=NOW(), expiration_time_limit=#{expirationTimeLimit}, refresh_token=#{refreshToken}
    </insert>

    <!-- 토큰 만료 시간이 3시간 경과한 로그인 정보 삭제 -->
    <delete id="deleteExpireToken">
        <![CDATA[
        DELETE
        from current_login
        WHERE DATE_ADD(last_refresh_time, INTERVAL (expiration_time_limit/1000 + 10800) SECOND) < NOW();
        ]]>
    </delete>

    <!-- status가 0인 경우에만 로그인 가능 -->
    <select id="confirmUser" resultType="avocado.moim.user.entity.User" parameterType="string">
    <![CDATA[
        select email,
               name,
               password,
               address,
               role,
               status
        from user
        where email = #{email}
          and (status = 0)
          and (role = 'USER' or role = 'ADMIN')
        ]]>
    </select>

    <select id="confirmUser2" resultType="avocado.moim.user.entity.User" parameterType="string">
        select user_id as userId,
               name,
               email,
               password,
               role,
               status
        from user
        where user_id = #{userId}
          and (status = 0)
          and (role = 'USER' or role = 'ADMIN')
    </select>
</mapper>